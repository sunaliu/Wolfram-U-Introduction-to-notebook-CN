1
00:00:00,500 --> 00:00:02,400
这一章节的《Wolfram 笔记本介绍》

2
00:00:02,400 --> 00:00:04,200
关于使用程序和模板

3
00:00:04,200 --> 00:00:07,300
来自动产生笔记本和文档

4
00:00:07,300 --> 00:00:09,600
自动产生文档在实际应用中很有用

5
00:00:09,600 --> 00:00:11,700
比如处理那些以某种方式重复的文档

6
00:00:11,700 --> 00:00:14,200
就像这里展示出的一系列报告

7
00:00:14,200 --> 00:00:15,950
或者是处理有相同内容的文档

8
00:00:15,950 --> 00:00:16,950
像这个笔记本

9
00:00:16,950 --> 00:00:19,400
或者是应用于一些更加专业的场景

10
00:00:19,400 --> 00:00:21,400
像处理按日程编写的报告

11
00:00:21,400 --> 00:00:23,000
处理计算合同

12
00:00:23,000 --> 00:00:26,900
或者只是记录长时间运行的程序结果

13
00:00:26,900 --> 00:00:28,900
待会会详细介绍

14
00:00:28,900 --> 00:00:31,100
一个处理报告的基本过程

15
00:00:31,100 --> 00:00:34,000
从创建一个像这样的简单模板笔记本开始

16
00:00:34,000 --> 00:00:36,300
然后用那个模板填充信息

17
00:00:36,300 --> 00:00:38,300
去产生一个文件

18
00:00:38,300 --> 00:00:40,450
此输入使用GenerateDocument函数

19
00:00:40,450 --> 00:00:42,500
其模板中各槽被填充了相应的值

20
00:00:42,500 --> 00:00:45,300
该模板已被保存在文件中

21
00:00:45,300 --> 00:00:47,600
另一种产生文件的更低级的方式

22
00:00:47,600 --> 00:00:49,000
是写一个这样的程序

23
00:00:49,000 --> 00:00:51,650
含有 CreateDocument 和 NotebookWrite 函数

24
00:00:51,650 --> 00:00:52,900
去产生一个笔记本文件

25
00:00:52,900 --> 00:00:55,500
然后在这个笔记本中插入内容

26
00:00:55,500 --> 00:00:57,100
产生笔记本的任何方式

27
00:00:57,100 --> 00:00:58,500
基本上都是可能的

28
00:00:58,500 --> 00:00:59,900
因为 Wolfram 笔记本

29
00:00:59,900 --> 00:01:02,400
是由 Wolfram 语言表达的

30
00:01:02,400 --> 00:01:04,000
而且可以被 Wolfram 语言程序

31
00:01:04,000 --> 00:01:06,000
创建和修改

32
00:01:06,000 --> 00:01:08,000
将一个笔记本描述为一系列单元(Cell)

33
00:01:08,000 --> 00:01:10,000
字面上是说这个笔记本的内容

34
00:01:10,000 --> 00:01:11,450
是一个 Wolfram 语言中的列表(List)

35
00:01:11,450 --> 00:01:14,200
拥有很多个单元(Cell)表达式作为元素

36
00:01:14,200 --> 00:01:16,000
比如 这里是一个笔记本的表达式

37
00:01:16,000 --> 00:01:18,000
拥有三个单元(Cell)和

38
00:01:18,000 --> 00:01:20,000
指定笔记本窗口顶端标题

39
00:01:20,000 --> 00:01:22,800
窗口大小的选项

40
00:01:22,800 --> 00:01:24,800
用 NotebookPut 函数

41
00:01:24,800 --> 00:01:27,500
这个表达式转换为一个笔记本

42
00:01:27,500 --> 00:01:28,900
直接输入笔记本表达式

43
00:01:28,900 --> 00:01:31,300
不是笔记本被创建的方式

44
00:01:31,300 --> 00:01:33,425
但是笔记本最终完成于

45
00:01:33,425 --> 00:01:36,800
笔记本表达式的操作

46
00:01:36,800 --> 00:01:39,300
其中一个操作就是 CreateNotebook 函数

47
00:01:39,300 --> 00:01:41,800
用在这里去创建一个新的笔记本表达式

48
00:01:41,800 --> 00:01:44,200
然后在计算机屏幕上展示

49
00:01:44,200 --> 00:01:47,000
这个输入同时分配了笔记本对象

50
00:01:47,000 --> 00:01:48,800
和变量的值

51
00:01:48,800 --> 00:01:50,800
将内容输入进笔记本的一个方式

52
00:01:50,800 --> 00:01:52,700
是用 NotebookWrite 函数

53
00:01:52,700 --> 00:01:56,300
将单元(Cell)表达式插入笔记本

54
00:01:56,300 --> 00:01:58,900
Wolfram语言的所有常规编程功能

55
00:01:58,900 --> 00:02:01,000
也可以用于生成笔记本

56
00:02:01,000 --> 00:02:02,700
比如说 开始可以写下一些数据

57
00:02:02,700 --> 00:02:05,000
作为报告的基础

58
00:02:05,000 --> 00:02:07,000
这里是一个创建新笔记本的程序

59
00:02:07,000 --> 00:02:09,800
用来将标题单元(Cell)写入笔记本

60
00:02:09,800 --> 00:02:12,300
然后在循环中用 NotebookWrite 命令

61
00:02:12,300 --> 00:02:13,300
和数据列表里的各项元素

62
00:02:13,300 --> 00:02:17,100
来创建这个笔记本

63
00:02:17,100 --> 00:02:19,000
除了 CreateNotebook 和 NotebookWrite 函数

64
00:02:19,000 --> 00:02:21,500
还有很多函数可以操作笔记本

65
00:02:21,500 --> 00:02:23,600
你可以在 Wolfram 参考文档中

66
00:02:23,600 --> 00:02:26,450
找到更多关于这些函数的信息

67
00:02:26,450 --> 00:02:29,000
像是这一页 关于从内核中操作笔记本

68
00:02:29,000 --> 00:02:30,900
这里有很多功能 比如移动

69
00:02:30,900 --> 00:02:32,050
和在笔记本中搜索

70
00:02:32,050 --> 00:02:34,700
比如插入和删除内容

71
00:02:34,700 --> 00:02:37,300
比如打开和关闭笔记本等等

72
00:02:37,300 --> 00:02:39,200
基本上 几乎任何可以

73
00:02:39,200 --> 00:02:40,800
通过交互式编辑本笔记本来完成的事情

74
00:02:40,800 --> 00:02:44,500
也可以从程序中完成

75
00:02:44,500 --> 00:02:46,100
产生笔记本的另一个更图形的方式

76
00:02:46,100 --> 00:02:47,600
是之前提到的

77
00:02:47,600 --> 00:02:49,600
像这样开始一个模板笔记本

78
00:02:49,600 --> 00:02:52,300
然后在模板中插入内容

79
00:02:52,300 --> 00:02:55,000
一个模板笔记本可以被操作 新建(New) ►

80
00:02:55,000 --> 00:02:56,000
可编程的笔记本(Programmatic Notebook) ►

81
00:02:56,000 --> 00:02:58,000
模板笔记本(Template Notebook)创建

82
00:02:58,000 --> 00:03:00,800
在模板笔记本的上方工具栏

83
00:03:00,800 --> 00:03:02,700
有一个“停驻”显示的单元列表

84
00:03:02,700 --> 00:03:03,750
除了工具栏

85
00:03:03,750 --> 00:03:06,800
模板笔记本的编辑方式与其他笔记本相同

86
00:03:06,800 --> 00:03:09,500
这个报告可以通过

87
00:03:09,500 --> 00:03:12,000
在槽(Slot)中填入表达式

88
00:03:12,000 --> 00:03:14,200
或者计算在函数中的表达式

89
00:03:14,200 --> 00:03:16,200
来进行创建

90
00:03:16,200 --> 00:03:18,400
你可以通过点击 Slot 按钮来添加输入槽(Slot)

91
00:03:18,400 --> 00:03:21,000
它将打开一个输入槽名称的对话框

92
00:03:21,000 --> 00:03:25,600
然后你可以选择性的输入它的默认值

93
00:03:25,600 --> 00:03:26,900
当你完成模板之后

94
00:03:26,900 --> 00:03:29,300
你可以点击生成报告(Generate)按钮来生成一个报告

95
00:03:29,300 --> 00:03:32,300
将会有以默认值填充的输入槽生成

96
00:03:32,300 --> 00:03:34,300
这对于检查模板

97
00:03:34,300 --> 00:03:36,700
是否给出了期望的结果很重要

98
00:03:36,700 --> 00:03:39,500
模板笔记本也可以被保存以便下次使用

99
00:03:39,500 --> 00:03:40,500
像其他笔记本一样

100
00:03:40,500 --> 00:03:43,900
通过选择文件(File)中的保存(Save)按钮来实现

101
00:03:43,900 --> 00:03:45,700
在创建模板之后 有一些其他的工具

102
00:03:45,700 --> 00:03:48,000
可以用来填写模板中的输入槽

103
00:03:48,000 --> 00:03:50,500
其中一个工具是 GenerateDocument 函数

104
00:03:50,500 --> 00:03:53,400
这里的函数示例中

105
00:03:53,400 --> 00:03:56,400
第一个参数是保存的模板文件名

106
00:03:56,400 --> 00:03:59,600
第二个参数是给模板输入槽赋值的规则

107
00:03:59,600 --> 00:04:01,500
输出的结果是一个报告

108
00:04:01,500 --> 00:04:04,800
其中含有填充了特定值的模板输入槽

109
00:04:04,800 --> 00:04:06,300
除了计算函数中的表达式

110
00:04:06,300 --> 00:04:09,200
和在模板的输入槽中写入结果这两种方法

111
00:04:09,200 --> 00:04:10,800
在模板里书写表达式

112
00:04:10,800 --> 00:04:13,300
是另一种可能的并且某种程度上更简单的方式

113
00:04:13,300 --> 00:04:16,000
来生成报告

114
00:04:16,000 --> 00:04:18,000
比如说 在 GenerateDocument 函数中的

115
00:04:18,000 --> 00:04:19,600
DateString 表达式

116
00:04:19,600 --> 00:04:21,400
被用于生成

117
00:04:21,400 --> 00:04:24,000
插入模板中输入槽的结果

118
00:04:24,000 --> 00:04:26,000
它可以被另一种方式替换

119
00:04:26,000 --> 00:04:29,300
用模板工具栏上的表达式(Expression)按钮

120
00:04:29,300 --> 00:04:31,600
点击这个按钮会出现一个方框

121
00:04:31,600 --> 00:04:34,000
当文档被创建时

122
00:04:34,000 --> 00:04:35,900
在那里你可以输入表达式

123
00:04:35,900 --> 00:04:37,600
在保存这个修改过的模板后

124
00:04:37,600 --> 00:04:39,800
我们可以回到 GenerateDocument 函数

125
00:04:39,800 --> 00:04:42,800
删除那里的 DateString 表达式

126
00:04:42,800 --> 00:04:44,000
文档生成后

127
00:04:44,000 --> 00:04:46,600
来自模板中 DateString 表达式的输出

128
00:04:46,600 --> 00:04:48,300
已经被插入

129
00:04:48,300 --> 00:04:50,300
这个报告看起来就像修改之前一样

130
00:04:50,300 --> 00:04:54,600
不过 GenerateDocument 函数已经没有那么复杂了

131
00:04:54,600 --> 00:04:57,000
报告可以做的比这个更加精致

132
00:04:57,000 --> 00:04:59,600
也可以包含图表、表格

133
00:04:59,600 --> 00:05:02,000
和其他可以被插入到笔记本中的东西

134
00:05:02,000 --> 00:05:05,100
比如说 这里有一个用了数据集中数据的图表

135
00:05:05,100 --> 00:05:07,500
其中的数据集加载于外部数据

136
00:05:07,500 --> 00:05:09,000
这个图表可以被加入报告

137
00:05:09,000 --> 00:05:12,500
通过这里所示的方法 添加一个输入槽

138
00:05:12,500 --> 00:05:15,000
保存然后修改模板

139
00:05:15,000 --> 00:05:17,400
接着编写 GenerateDocument 函数

140
00:05:17,400 --> 00:05:20,600
为这个新的输入槽赋值

141
00:05:20,600 --> 00:05:24,000
然后进行计算 生成这个报告

142
00:05:24,000 --> 00:05:26,500
像之前使用 DateString 表达式一样

143
00:05:26,500 --> 00:05:29,000
加载数据和生成图表的程序

144
00:05:29,000 --> 00:05:32,000
在那个示例里也可以被放在模板中

145
00:05:32,000 --> 00:05:33,000
一个直接的方法是

146
00:05:33,000 --> 00:05:35,500
简单地编辑模板并写下输入(Input)

147
00:05:35,500 --> 00:05:38,300
来加载数据和生成图表

148
00:05:38,300 --> 00:05:40,500
如果我们点击模板中的生成报告(Generate)按钮

149
00:05:40,500 --> 00:05:44,200
输入和输出都会写入报告

150
00:05:44,200 --> 00:05:46,800
如果报告只需要展示图表

151
00:05:46,800 --> 00:05:48,800
那么可以进行以下操作

152
00:05:48,800 --> 00:05:52,500
点击模板工具栏的单元行为(Cell Behavior)菜单

153
00:05:52,500 --> 00:05:54,600
如果想要计算并且删除

154
00:05:54,600 --> 00:05:56,200
含有载入数据的输入单元

155
00:05:56,200 --> 00:05:59,100
选择那个单元

156
00:05:59,100 --> 00:06:01,400
然后点击计算并删除(Evaluate and Delete)

157
00:06:01,400 --> 00:06:03,300
对于生成图表的另一个单元

158
00:06:03,300 --> 00:06:05,400
我们可以再次选择计算并删除(Evaluate and Delete)

159
00:06:05,400 --> 00:06:07,800
这将会展示图表并删除输入

160
00:06:07,800 --> 00:06:10,600
或者我们可以选择计算并隐藏(Evaluate and Hide)

161
00:06:10,600 --> 00:06:11,750
点击生成报告(Generate)按钮

162
00:06:11,750 --> 00:06:13,800
可以看到效果

163
00:06:13,800 --> 00:06:14,900
载入数据的单元

164
00:06:14,900 --> 00:06:17,000
被设置为计算并删除(Evaluate and Delete)的那个

165
00:06:17,000 --> 00:06:18,900
计算后被删除了

166
00:06:18,900 --> 00:06:20,300
生成图表的单元

167
00:06:20,300 --> 00:06:22,400
被设置为计算并隐藏(Evaluate and Hide)的那个

168
00:06:22,400 --> 00:06:25,200
在被关闭的单元组里展示了图表

169
00:06:25,200 --> 00:06:27,500
双击被关闭的这个单元组括号

170
00:06:27,500 --> 00:06:29,600
可以显示那个被隐藏的输入

171
00:06:29,600 --> 00:06:31,950
对于那些想要查看输入的用户来说

172
00:06:31,950 --> 00:06:34,000
在使用报告时 这个功能很有用

173
00:06:34,000 --> 00:06:36,000
单元行为(Cell Behavior)菜单中的其他选项包括

174
00:06:36,000 --> 00:06:38,600
不计算(Leave Unevaluated) 可以在不进行计算的情况下

175
00:06:38,600 --> 00:06:41,400
复制选中的单元进入报告

176
00:06:41,400 --> 00:06:43,500
和不包括该单元(Exclude Cell) 可以忽略这个单元

177
00:06:43,500 --> 00:06:46,600
同样不进行计算

178
00:06:46,600 --> 00:06:48,500
它对于保存不是报告一部分的

179
00:06:48,500 --> 00:06:51,000
笔记和注释很有用

180
00:06:51,000 --> 00:06:53,500
那个示例的程序造就了一个技术细节

181
00:06:53,500 --> 00:06:55,900
有的时候知道它很有用

182
00:06:55,900 --> 00:06:58,600
那就是生成报告模板

183
00:06:58,600 --> 00:07:00,000
和产生报告的笔记本

184
00:07:00,000 --> 00:07:01,000
有一个设置选项

185
00:07:01,000 --> 00:07:03,900
可以让每个笔记本产生

186
00:07:03,900 --> 00:07:06,000
不同上下文(Context)的变量

187
00:07:06,000 --> 00:07:07,900
这个示例中讨论的新变量

188
00:07:07,900 --> 00:07:09,800
是 data 变量

189
00:07:09,800 --> 00:07:12,000
默认 在所有笔记本中

190
00:07:12,000 --> 00:07:13,800
新变量的上下文(Context)都是全局变量 (global)

191
00:07:13,800 --> 00:07:15,500
所以一个笔记本中的变量

192
00:07:15,500 --> 00:07:18,150
和其他笔记本中的

193
00:07:18,150 --> 00:07:19,800
相同名称的变量是同一个

194
00:07:19,800 --> 00:07:21,500
然而，在这个产生的笔记本中

195
00:07:21,500 --> 00:07:23,500
它的上下文(Context)是特有的

196
00:07:23,500 --> 00:07:25,400
所以笔记本中

197
00:07:25,400 --> 00:07:26,400
这个变量被赋的值

198
00:07:26,400 --> 00:07:28,600
对其他笔记本中的

199
00:07:28,600 --> 00:07:30,000
同名变量无影响

200
00:07:30,000 --> 00:07:31,700
一般来说这是一个很好的特性

201
00:07:31,700 --> 00:07:34,100
不过如果报告的产生

202
00:07:34,100 --> 00:07:36,300
基于变量的全局名称

203
00:07:36,300 --> 00:07:39,300
那么说明变量的上下文(Context)是必须的

204
00:07:39,300 --> 00:07:41,000
或者让这些变量

205
00:07:41,000 --> 00:07:44,000
使用同一个上下文(Context)

206
00:07:44,000 --> 00:07:46,000
创建模板的最常见的原因

207
00:07:46,000 --> 00:07:47,900
是为了生成不止一个报告

208
00:07:47,900 --> 00:07:50,000
这在某种程度上提示我们

209
00:07:50,000 --> 00:07:52,200
只应该在模板中编写

210
00:07:52,200 --> 00:07:54,500
对所有报告都相同的格式和内容

211
00:07:54,500 --> 00:07:57,000
例如 考虑生成一个单独的报告

212
00:07:57,000 --> 00:08:00,000
使用之前加载的数据集中的每条记录

213
00:08:00,000 --> 00:08:02,300
那个数据集包含了一系列的记录

214
00:08:02,300 --> 00:08:04,700
但是那个示例模板只展示了

215
00:08:04,700 --> 00:08:06,500
第一条记录

216
00:08:06,500 --> 00:08:07,800
这个数据碰巧在

217
00:08:07,800 --> 00:08:09,700
Wolfram 语言数据集中

218
00:08:09,700 --> 00:08:11,900
所以它可以被简单地使用

219
00:08:11,900 --> 00:08:15,400
通过被称为关联(Association)的方式

220
00:08:15,400 --> 00:08:18,500
这个关联(Association)可以在 GenerateDocument 函数中使用

221
00:08:18,500 --> 00:08:20,700
就像之前的一系列

222
00:08:20,700 --> 00:08:23,100
用于模板中被命名的输入槽的规则一样

223
00:08:23,100 --> 00:08:24,900
让模板和数据集一起发挥作用

224
00:08:24,900 --> 00:08:26,100
我们可以修改模板

225
00:08:26,100 --> 00:08:28,700
中被命名的输入槽的名称

226
00:08:28,700 --> 00:08:30,300
与数据集每一个记录中的

227
00:08:30,300 --> 00:08:32,400
被命名的项 (Item) 匹配

228
00:08:32,400 --> 00:08:33,900
在保存修改后的模板之后

229
00:08:33,900 --> 00:08:36,700
GenerateDocument 函数可以和从数据集中提取的

230
00:08:36,700 --> 00:08:40,000
关联(Association)一起 产生一个报告

231
00:08:40,000 --> 00:08:42,300
对整个数据集使用 Normal 函数

232
00:08:42,300 --> 00:08:45,600
可以给出每一个记录的关联(Association)

233
00:08:45,600 --> 00:08:48,700
而且每一条关联都有名称和值

234
00:08:48,700 --> 00:08:52,500
以供使用 GenerateDocument 函数使用来产生文档

235
00:08:52,500 --> 00:08:55,400
现在剩下的事情是写一个小程序

236
00:08:55,400 --> 00:08:57,000
来对每一个列表里的元素

237
00:08:57,000 --> 00:08:58,500
应用 GenerateDocument 函数

238
00:08:58,500 --> 00:09:01,300
这样可以对数据集中的每一条记录

239
00:09:01,300 --> 00:09:02,900
生成一个独立的报告

240
00:09:04,400 --> 00:09:05,800
除了生成独立的报告

241
00:09:05,800 --> 00:09:07,400
基于这个数据集的很多报告

242
00:09:07,400 --> 00:09:09,400
也可以成为一个文档

243
00:09:09,400 --> 00:09:12,700
其中的每一个独立的部分对应一条记录

244
00:09:12,700 --> 00:09:14,100
生成这样的报告的一种方式是

245
00:09:14,100 --> 00:09:17,500
使用模板工具栏中的重复块(Repeating Block)按钮

246
00:09:17,500 --> 00:09:19,400
下面简单地展示一下

247
00:09:19,400 --> 00:09:20,600
如何使用这个功能

248
00:09:20,600 --> 00:09:23,000
这里有一个带有两个单元的模板

249
00:09:23,000 --> 00:09:25,300
为了重复这两个单元 需要选择单元括号

250
00:09:25,300 --> 00:09:27,000
然后点击重复块(Repeating Block)按钮

251
00:09:27,000 --> 00:09:29,800
会出现一个有几个选项的对话框

252
00:09:29,800 --> 00:09:31,800
这里我们只会展示第二个选项

253
00:09:31,800 --> 00:09:33,300
选项二表明了这个模板

254
00:09:33,300 --> 00:09:35,400
会使用一个用变量命名的数据

255
00:09:35,400 --> 00:09:36,500
并且这个变量的值

256
00:09:36,500 --> 00:09:39,700
将会被填充入每一个块(Block)中的输入槽

257
00:09:39,700 --> 00:09:43,500
使用这个模板的 GenerateDocument 输入看起来像这样

258
00:09:43,500 --> 00:09:45,300
其中数据变量的值

259
00:09:45,300 --> 00:09:46,500
是一系列关联(Association)

260
00:09:46,500 --> 00:09:49,300
每一个关联都给出了一系列命名的值

261
00:09:49,300 --> 00:09:52,100
来填充每一个块中的输入槽

262
00:09:52,100 --> 00:09:53,100
在这个示例中

263
00:09:53,100 --> 00:09:55,000
数据变量的值有三个元素

264
00:09:55,000 --> 00:09:58,200
所以报告中的块会被重复三次

265
00:09:59,500 --> 00:10:00,900
回到之前的数据集

266
00:10:00,900 --> 00:10:03,000
这次我们没有对数据集中每一条记录

267
00:10:03,000 --> 00:10:04,300
分别地应用 GenerateDocument 函数

268
00:10:04,300 --> 00:10:06,300
而是数据集中的

269
00:10:06,300 --> 00:10:07,300
所有的关联

270
00:10:07,300 --> 00:10:09,700
都将被传入 GenerateDocument 函数

271
00:10:09,700 --> 00:10:12,000
作为变量命名的数据的值

272
00:10:13,000 --> 00:10:15,000
现在编辑之前的模板

273
00:10:15,000 --> 00:10:17,300
来使用与每一条记录中的元素名称匹配的

274
00:10:17,300 --> 00:10:19,800
重复块(repeating block)和命名的输入槽

275
00:10:19,800 --> 00:10:20,900
修改过后

276
00:10:20,900 --> 00:10:23,600
创建报告的 GenerateDocument 程序

277
00:10:23,600 --> 00:10:25,000
只剩下了一行

278
00:10:26,500 --> 00:10:28,300
之前部分出现的所有

279
00:10:28,300 --> 00:10:30,500
笔记本格式化和交互式的特性

280
00:10:30,500 --> 00:10:33,300
也可以被自动产生的报告使用

281
00:10:33,300 --> 00:10:34,700
比如说 这里是一个模板

282
00:10:34,700 --> 00:10:37,600
使用了 Grid 函数来在表格中展示数据

283
00:10:37,600 --> 00:10:39,500
并且使用了 TabView 函数

284
00:10:39,500 --> 00:10:43,000
因此报告的用户可以在不同的图表中选择

285
00:10:43,000 --> 00:10:44,700
这个模板产生的报告

286
00:10:44,700 --> 00:10:47,300
是一个有总结表格的交互性的报告

287
00:10:47,300 --> 00:10:48,500
有着交互的特性

288
00:10:48,500 --> 00:10:51,000
可以选择并展示不同的信息

289
00:10:52,300 --> 00:10:54,200
这就是这部分教程的最后的示例

290
00:10:54,200 --> 00:10:55,300
在基础的报告生成的过程中

291
00:10:55,300 --> 00:10:57,800
有很多变量

292
00:10:57,800 --> 00:11:00,300
在 Wolfram 参考文档中

293
00:11:00,300 --> 00:11:02,900
你可以通过搜索报告生成 (report generation) 找到更多信息

294
00:11:02,900 --> 00:11:04,300
比如说 这个指导页面

295
00:11:04,300 --> 00:11:07,200
给出了出现在这一部分教程中的一系列函数的链接

296
00:11:07,200 --> 00:11:09,950
和在云上产生文档的函数

297
00:11:09,950 --> 00:11:10,950
对按照时间自动生成报告

298
00:11:10,950 --> 00:11:14,000
这样的事情

299
00:11:14,000 --> 00:11:17,000
也有很多对于基本过程的

300
00:11:17,000 --> 00:11:18,000
一步一步的工作流程指导

301
00:11:18,000 --> 00:11:20,300
来帮助你们从模板中生成报告

302
00:11:20,300 --> 00:11:24,500
和按照时间生成报告或者保存为PDF文件

